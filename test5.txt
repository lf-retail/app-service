- name: Stop JBoss (JAR)
  become: true 
  become_user: itdevtra
  command: "/apps/JBOSSEAP_RETAIL_ONBOARDING/EAP-7.2.0/bin/STOPJBOSS_RETAILONBORADING.sh --connect controller={{ jboss_controller_jar }} command=:shutdown"
  ignore_errors: yes

- name: Download JAR
  delegate_to: localhost
  run_once: true
  get_url:
    url: "{{ jar_file_url }}"
    dest: "/tmp/{{ jar_file_name }}"
    headers:
      Authorization: "token {{ github_token }}"

- name: Copy JAR to Target Server (JAR)
  copy:
    src: "/tmp/{{ jar_file_name }}"
    dest: "{{ jboss_deployments_dir_jar }}/{{ jar_file_name }}"

- name: Start JBoss (JAR)
  become: true 
  become_user: itdevtra
  command: "/apps/JBOSSEAP_RETAIL_ONBOARDING/EAP-7.2.0/bin/STARTJBOSS_RETAILONBORADING.sh"

- name: Clean up JAR from Runner (JAR)
  delegate_to: localhost
  file:
    path: "/tmp/{{ jar_file_name }}"
    state: absent
  run_once: true

===========================

- name: Stop JBoss (JAR)
  become: true 
  become_user: itdevtra
  command: "/apps/JBOSSEAP_RETAIL_ONBOARDING/EAP-7.2.0/bin/STOPJBOSS_RETAILONBORADING.sh --connect controller={{ jboss_controller_jar }} command=:shutdown"
  ignore_errors: yes

- name: Get current timestamp
  set_fact:
    timestamp: "{{ ansible_date_time.date }}_{{ ansible_date_time.hour }}{{ ansible_date_time.minute }}{{ ansible_date_time.second }}"

- name: Create backup directory with timestamp
  become: true
  become_user: itdevtra
  file:
    path: "{{ jboss_deployments_dir_jar }}/backup_{{ timestamp }}"
    state: directory

- name: Backup existing JAR files
  become: true
  become_user: itdevtra
  command: mv "{{ jboss_deployments_dir_jar }}"/*.jar "{{ jboss_deployments_dir_jar }}/backup_{{ timestamp }}/"

- name: List contents of the backup directory
  become: true
  become_user: itdevtra
  command: ls -l "{{ jboss_deployments_dir_jar }}/backup_{{ timestamp }}"

- name: Download JAR
  delegate_to: localhost
  run_once: true
  get_url:
    url: "{{ jar_file_url }}"
    dest: "/tmp/{{ jar_file_name }}"
    headers:
      Authorization: "token {{ github_token }}"

- name: Copy JAR to Target Server (JAR)
  copy:
    src: "/tmp/{{ jar_file_name }}"
    dest: "{{ jboss_deployments_dir_jar }}/{{ jar_file_name }}"

- name: Start JBoss (JAR)
  become: true 
  become_user: itdevtra
  command: "/apps/JBOSSEAP_RETAIL_ONBOARDING/EAP-7.2.0/bin/STARTJBOSS_RETAILONBORADING.sh"

- name: Clean up JAR from Runner (JAR)
  delegate_to: localhost
  file:
    path: "/tmp/{{ jar_file_name }}"
    state: absent
  run_once: true
========================

- name: Stop JBoss (JAR)
  become: true 
  become_user: itdevtra
  command: "/apps/JBOSSEAP_RETAIL_ONBOARDING/EAP-7.2.0/bin/STOPJBOSS_RETAILONBORADING.sh --connect controller={{ jboss_controller_jar }} command=:shutdown"
  ignore_errors: yes

- name: Get current timestamp
  set_fact:
    timestamp: "{{ ansible_date_time.date }}_{{ ansible_date_time.hour }}{{ ansible_date_time.minute }}{{ ansible_date_time.second }}"

- name: Create backup directory with timestamp
  become: true
  become_user: itdevtra
  file:
    path: "{{ jboss_deployments_dir_jar }}/backup_{{ timestamp }}"
    state: directory

- name: Copy existing JAR files to backup directory
  become: true
  become_user: itdevtra
  command: cp "{{ jboss_deployments_dir_jar }}"/*.jar "{{ jboss_deployments_dir_jar }}/backup_{{ timestamp }}/"

- name: List contents of the backup directory
  become: true
  become_user: itdevtra
  command: ls -l "{{ jboss_deployments_dir_jar }}/backup_{{ timestamp }}"

- name: Download JAR
  delegate_to: localhost
  run_once: true
  get_url:
    url: "{{ jar_file_url }}"
    dest: "/tmp/{{ jar_file_name }}"
    headers:
      Authorization: "token {{ github_token }}"

- name: Copy JAR to Target Server (JAR)
  copy:
    src: "/tmp/{{ jar_file_name }}"
    dest: "{{ jboss_deployments_dir_jar }}/{{ jar_file_name }}"

- name: Start JBoss (JAR)
  become: true 
  become_user: itdevtra
  command: "/apps/JBOSSEAP_RETAIL_ONBOARDING/EAP-7.2.0/bin/STARTJBOSS_RETAILONBORADING.sh"

- name: Clean up JAR from Runner (JAR)
  delegate_to: localhost
  file:
    path: "/tmp/{{ jar_file_name }}"
    state: absent
  run_once: true
====================

Run cd /ansible/GITHUB_RUNNER/actions-runner10/_work/SMEDigitalBank/SMEDigitalBank
  
PLAY [target_jbwar] ************************************************************
TASK [Gathering Facts] *********************************************************
fatal: [ANT1DEHAPPS02]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: Warning: Permanently added '10.15.24.32' (ECDSA) to the list of known hosts.\r\nDo not attempt to logon unless you are an authorised user of RAKBANK. Any logon to the RAKBANK network is subject to the provisions of the Banks Information Security Policy. Your actions may be audited. In the course of monitoring individuals improperly using this system, or in the course of system maintenance, the activities of authorized users may also be monitored. Anyone using this system expressly consents to such monitoring and is advised that if such monitoring reveals possible evidence of criminal activity, system personnel may provide the evidence of such monitoring to law enforcement officials. For IT technical assistance you may contact IT Help Desk @ 00971-7-2061111.\nitdevtra@10.15.24.32: Permission denied (publickey,password).", "unreachable": true}
PLAY RECAP *********************************************************************
ANT1DEHAPPS02              : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
Error: Process completed with exit code 4.
