Hi Bala,
As we planned to implement our release Pipeline with the following stages
APP-CI-Setup --> App-CI/Build --> App-CD-DEV --> App-CD-UAT --> App-CD-PROD --> App-CD-DR

Release Pipeline
----------------
name: Release Pipeline cd test
run-name: release - ${{github.event.inputs.releaseVersion}}

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Release Version'
        required: true
        default: '1.0.0'
      choice:
        type: choice
        description: Select a service
        options:
          - Rakbank-DEH-Onboarding/RetailOnboarding-AccMS
         
      app:
        type: boolean
        description: Deploy App
      database:
        type: boolean
        description: Deploy database      
       
jobs:
  Create-App-CI:
    if: ${{ github.event.inputs.app =='true' }}
    environment: DEV
    name: APP-CI-Setup
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      issues: write
      repository-projects: write
     
    steps:
    ###we are using github token because if it is enterprise level we have to use this
    - name: Get Token
      id: get-workflow-token
      uses: peter-murray/workflow-application-token-action@v2
      with:
        application_id: 403159
        application_private_key: ${{ secrets.DEVOPSTOKEN_DEH }}
       
    - name: Display selected inputs
      run: |
        echo "Selected Release Version: ${{ github.event.inputs.releaseVersion }}"
        echo "Selected Repository: ${{ github.event.inputs.choice }}"
        echo "Selected Organization: ${{ github.event.inputs.Organization }}"
    - name: Checkout selected repository
      uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.choice }}
        ref: 'dev'
        token: ${{ steps.get-workflow-token.outputs.token }}

    - name : Create Application Release Branch
      run: |
        RELEASE_BRANCH_NAME=release/r-${{ github.event.inputs.releaseVersion }}
        git checkout -b $RELEASE_BRANCH_NAME
        git push --set-upstream origin $RELEASE_BRANCH_NAME
      env:
        token: $GITHUB_TOKEN

###successfully calling our CI
  App-CI:
    name: App-CI
    needs: Create-App-CI
    uses: Rakbank-DEH-Onboarding/RetailOnboarding-AccMS/.github/workflows/release-gradle-build.yml@dev
    secrets: inherit
    with:
      repoName: ${{ github.event.inputs.choice }}
      branchName: $RELEASE_BRANCH_NAME

###if we are using the below method it is working with environment variable but release structure will be changed like what we have done with CI
 # Create-App-CD:
  #  name: App-CD
  #  needs: App-CI
   # environment: UAT
    #runs-on: ubuntu-latest
     
    #steps:
    #- name: Get Token
     # id: get-workflow-token
      #uses: peter-murray/workflow-application-token-action@v2
      #with:
       # application_id: 403159
        #application_private_key: ${{ secrets.DEVOPSTOKEN_DEH }}
       
  #App-Deploy-Dev:
   # name: App-CD-UAT
    #needs: Create-App-CD
    #uses: Rakbank-DEH-Onboarding/RetailOnboarding-AccMS/.github/workflows/jboss_deploy_github_new.yml@dev
    #secrets: inherit
    #with:
     # repoName: ${{ github.event.inputs.choice }}
         

###if we are using the below method, it is working but we have to give the environment variable in CD workflow only
  App-Deploy-UAT:
    name: App-cd
    needs: App-CI
    uses: Rakbank-DEH-Onboarding/RetailOnboarding-AccMS/.github/workflows/jboss_deploy_github_new.yml@dev
    secrets: inherit
    with:
      repoName: ${{ github.event.inputs.choice }}
         

###if we are using the below method, it is working but it will be calling CD workflow directly and it can't wait for approval
  App-Deploy-UAT:
    name: App-cd
    needs: App-CI
    uses: Rakbank-DEH-Onboarding/RetailOnboarding-AccMS/.github/workflows/jboss_deploy_github_new.yml@dev
    secrets: inherit
    with:
      repoName: ${{ github.event.inputs.choice }}
      Environments: UAT #tried with other variable also env_value: UAT    
   
###further we are stuck with to implement for passing the environment variable and getting the input from CD workflow. So, need your help proceed further
       

==========================

CD workflow
-----------
name: Deploy WAR to JBoss

on:

  workflow_call:
    inputs:
      repoName:
        required: true
        type: string
      #Environments:
       # required: true
        #type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    Environments: UAT

      #group: rakbank-self-hosted-runner
      #labels: rakdeh3
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Run Ansible Playbook
      env:
       
        TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}
       
      run: |
        cd ${{ github.workspace }}
        ansible-playbook -b --extra-vars 'target=ANTANSAPPS02' ./playbook/dehrepdeployment.yml
       
=======================

Playbook
--------
jboss_controller: 10.15.14.105:18990
#jboss_user: "{{ lookup('env', 'JBOSS_USER') }}"
#jboss_password: "{{ lookup('env', 'JBOSS_PASSWORD') }}"
github_token: "{{ lookup('env', 'TOKEN_GITHUB') }}"
war_file_url: "https://maven.pkg.github.com/Rakbank-DEH-Onboarding/RetailOnboarding-AccMS/com/rakbank/infosys/lib/retailonboarding-accms/1111/retailonboarding-accms-1111.war"
war_file_name: "{{ war_file_url | basename }}"
jboss_home: "/apps/JBOSSEAP7.2_EXP_DIGIHUB_DIGITAL_BANK/EAP-7.2.0"
jboss_deployments_dir: "{{ jboss_home }}/standalone/deployments"
#dest_path: "/apps/JBOSSEAP7.2_EXP_DIGIHUB_DIGITAL_BANK/EAP-7.2.0/standalone/{{ war_file_name }}"
...

---
- name: Download WAR from GitHub packages
  get_url:
    url: "{{ war_file_url }}"
    dest: "{{ jboss_deployments_dir }}/{{ war_file_name }}"
    headers:
      Authorization: "token {{ github_token }}"

- name: Undeploy existing WAR (if it exists) from JBoss
  shell: "{{ jboss_home }}/bin/jboss-cli.sh --connect --controller={{ jboss_controller }} --command='undeploy {{ war_file_name }} --keep-content'"
  ignore_errors: yes  

- name: Deploy the WAR file to JBoss
  shell: "{{ jboss_home }}/bin/jboss-cli.sh --connect --controller={{ jboss_controller }} --command='deploy --force {{ jboss_deployments_dir }}/{{ war_file_name }}'"
...        
