using workflow
name: IBPS-deployment
on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on:
     group: rakbank-self-hosted-runner
     labels: dehitdevtra1

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Debug Working Directory
      run: |
        ls -al
        pwd
    - name: Make deploy.sh executable
      run: |
        chmod +x deploy.sh #rollback.sh
    - name: Run Ansible Playbook
      env:
        TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}
      run: |
        cd ${{ github.workspace }}
        ansible-playbook -vvv -b --extra-vars "target=target_jb destination=${{ github.workspace }}" ./playbook/IBPS-deployment.yml
        #ansible-playbook -vvv -b --extra-vars "target=target_jb destination=${{ github.workspace }} deploy_mode=true rollback_mode=false" ./playbook/IBPS-deployment.yml
================================
using playbook
- hosts: '{{ target }}'
  become: yes
  become_user: itdevtra
  gather_facts: yes
  roles:
    - IBPS-deployment
===================================
using deploy.sh
- name: Download zip from GitHub packages on Runner
  delegate_to: localhost
  run_once: true
  get_url:
    url: "{{ zip_file_url }}"
    dest: "/tmp/{{ zip_file_name }}"
    headers:
      Authorization: "token {{ github_token }}"
 
- name: Copy zip to Target Server
  copy:
    src: "/tmp/{{ zip_file_name }}"
    dest: "{{ Profile_home }}/{{ zip_file_name }}"
    mode: '0755'

- name: Copy deploy.sh to Target Server
  copy:
    src: "/ansible/GITHUB_RUNNER/actions-runner10/_work/ibps-was-ansible-cd/ibps-was-ansible-cd/deploy.sh"
    dest: "{{ Profile_home }}/deploy.sh"
    mode: '0755'
  become: yes
  become_user: "{{ ansible_user }}"

- name: Run deploy on Target Server
  become: yes
  become_user: "{{ ansible_user }}"
  shell: "cd {{ Profile_home }} && ./deploy.sh {{ Profile_home }} {{ zip_file_url }} {{ zip_file_name }} {{ backup_location }}"
  register: deploy_result
  ignore_errors: yes

- name: List contents of the directory after copying deploy.sh
  command: ls -al "{{ backup_location }}"
  become: yes
  become_user: "{{ ansible_user }}"  

- name: List contents of the directory after copying deploy.sh
  command: ls -al "{{ targeted_location }}"
  become: yes
  become_user: "{{ ansible_user }}"

- name: Clean up zip file from Runner
  delegate_to: localhost
  file:
    path: "/tmp/{{ zip_file_name }}"
    state: absent
  run_once: true   
======================
using rollback.sh

- name: Copy rollback.sh to Target Server
  copy:
    src: "/ansible/GITHUB_RUNNER/actions-runner10/_work/ibps-was-ansible-cd/ibps-was-ansible-cd/rollback.sh"
    dest: "{{ Profile_home }}/rollback.sh"
    mode: '0755'
  become: yes
  become_user: "{{ ansible_user }}"

- name: Run deploy on Target Server
  become: yes
  become_user: "{{ ansible_user }}"
  shell: "cd {{ Profile_home }} && ./rollback.sh {{ Profile_home }} {{ backup_location }}"
  register: deploy_result
  ignore_errors: yes

- name: List contents of the directory after copying rollback.sh
  command: ls -al "{{ targeted_location }}"
  become: yes
  become_user: "{{ ansible_user }}"

- name: Clean up zip file from Runner
  delegate_to: localhost
  file:
    path: "/tmp/{{ zip_file_name }}"
    state: absent
  run_once: true   
=======

---
- name: " STOP WAS APP SERVER"
  import_tasks: main-deploy.yml
  tags:
    - deploy

- name: " STOP WAS APP SERVER"
  import_tasks: main-rollback.yml
  tags:
    - rollback    
    
============

- name: Deploy or Rollback
  include_tasks: main-deploy.yml
  when: deploy_or_rollback == 'deploy'
  tags:
    - deploy

- name: Deploy or Rollback
  include_tasks: main-rollback.yml
  when: deploy_or_rollback == 'rollback'
  tags:
    - rollback
-------------
- name: Run Ansible Playbook
  env:
    TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}
  run: |
    cd ${{ github.workspace }}
    ansible-playbook -vvv -b --extra-vars "target=target_jb destination=${{ github.workspace }} deploy_or_rollback=deploy" ./playbook/IBPS-deployment.yml
-----------
- name: Run Ansible Playbook - Rollback
  env:
    TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}
  run: |
    cd ${{ github.workspace }}
    ansible-playbook -vvv -b --extra-vars "target=target_jb destination=${{ github.workspace }} deploy_or_rollback=rollback" ./playbook/IBPS-deployment.yml
=====================

---
- name: Main Playbook
  hosts: your_target_hosts
  gather_facts: true

  tasks:
    - name: Include deploy playbook
      import_playbook: main-deploy.yml
      when: deploy_mode | default(false)

    - name: Include rollback playbook
      import_playbook: main-rollback.yml
      when: rollback_mode | default(false)
===============
ansible-playbook -vvv -b --extra-vars "target=target_jb destination=${{ github.workspace }} deploy_mode=true"  "rollback_mode=false" ./playbook/IBPS-deployment.yml


---
- name: Main Playbook
  hosts: your_target_hosts
  gather_facts: true

  tasks:
    - name: Include deploy playbook
      import_playbook: main-deploy.yml
      when: deploy_mode | default(true)

    - name: Include rollback playbook
      import_playbook: main-rollback.yml
      when: rollback_mode | default(true)
=========================

Run cd /ansible/GITHUB_RUNNER/actions-runner10/_work/ibps-was-ansible-cd/ibps-was-ansible-cd
ERROR! the playbook: rollback_mode=true could not be found
ansible-playbook 2.8.18
  config file = /ansible/GITHUB_RUNNER/actions-runner10/_work/ibps-was-ansible-cd/ibps-was-ansible-cd/ansible.cfg
  configured module search path = ['/home/itdevtra/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3.6/site-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.6.8 (default, Jan 14 2022, 11:04:20) [GCC 8.5.0 20210514 (Red Hat 8.5.0-7)]
Using /ansible/GITHUB_RUNNER/actions-runner10/_work/ibps-was-ansible-cd/ibps-was-ansible-cd/ansible.cfg as config file
Error: Process completed with exit code 1.
