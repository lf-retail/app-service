#!/bin/bash

# Function to process each line in release.txt
process_line() {
  local filename
  local destination

  # Split the line into filename and destination using a comma as the delimiter 
  IFS=',' read -r filename destination <<< "$1"

  # Perform actions based on the values
  echo "Deploying $filename to $destination"

  # Check if either the filename or destination is empty
  if [ -z "$filename" ] || [ -z "$destination" ]; then
    echo "Error: Empty filename or destination in line: $1"
    return
  fi

  # Backup the existing file or directory at the destination
  if [ -e "$destination" ]; then
    backup_dir="/ibm/IBM-CAS/BACKUP_RELEASE"
    mkdir -p "$backup_dir"
    backup_file="$backup_dir/$(basename "$destination")_backup_$(date +'%Y%m%d%H%M%S')"
    mv "$destination" "$backup_file"
    echo "Backed up $destination to $backup_file"

    # Add the backup details to the change.log file
    echo "$(date +'%Y-%m-%d %H:%M:%S') - Backed up $destination to $backup_file" >> change.log
  else
    echo "File or directory $destination not found, skipping backup"
  fi

  # Deploy the application file to its destination
  # You might need to customize this part based on your application structure
  # For example, copy or move the file to its destination
  # cp "$filename" "$destination"

  # Add deployment details to the change.log file
  echo "$(date +'%Y-%m-%d %H:%M:%S') - Deployed $filename to $destination" >> change.log
}

# Download the ZIP file from GitHub Packages using curl
curl -H "Authorization: token TOKEN_GITHUB" -o release.zip -L "https://maven.pkg.github.com/rakbank-internal/IBPS-Deployment/Rak/IBPS/release/1.0.0/release-1.0.0.zip"

if [ $? -eq 0 ]; then
  echo "Downloaded release.zip from GitHub Packages"

  # Unzip the release.zip file
  unzip -q release.zip

  # Check if the release.txt file exists
  if [ -e "release.txt" ]; then
    # Process each line in the release.txt file
    while IFS= read -r line; do
      # Skip empty lines and lines starting with #
      if [[ -n "$line" && "$line" != "#"* ]]; then
        process_line "$line"
      fi
    done < "release.txt"
  else
    echo "release.txt file not found in the extracted contents"
  fi

  # Remove the release.zip file
  rm release.zip
else
  echo "Error downloading release.zip from GitHub Packages"
fi
