App-Deploy-Dev:
  needs: App-CI
  runs-on: ubuntu-latest
  steps:
    - name: Trigger Deployment Workflow
      uses: actions/github-script@0.10.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          await github.repos.createDispatchEvent({
            owner: 'your-organization',
            repo: 'your-repository',
            event_type: 'deploy-app',
            client_payload: {
              choice: context.payload.inputs.choice,
              releaseVersion: context.payload.inputs.releaseVersion,
              branchName: `release/r-${context.payload.inputs.releaseVersion}`
            }
          });
=================

name: Release Pipeline
run-name: release - ${{ github.event.inputs.releaseVersion }}

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Release Version'
        required: true
        default: '1.0.0'
      choice:
        type: choice
        description: Select a service
        options:
          - Rakbank-DEH-Onboarding/RetailOnboarding-AccMS
          - Rakbank-DEH-Onboarding/RetailOnboarding-DB
      app:
        type: boolean
        description: Deploy App
      database:
        type: boolean
        description: Deploy database
  repository_dispatch:
    types: [deploy-app]

jobs:
  Create-App-CI:
    if: ${{ github.event.inputs.app =='true' }}
    # ... (rest of your Create-App-CI job)

  App-CI:
    name: App-ci
    # ... (rest of your App-CI job)

  App-Deploy-Dev:
    needs: App-CI
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Deployment Workflow
        uses: actions/github-script@0.10.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const response = await octokit.request('POST /repos/:owner/:repo/dispatches', {
              owner: 'your-organization',
              repo: 'your-repository',
              event_type: 'deploy-app',
              client_payload: {
                choice: ${{ github.event.inputs.choice }},
                releaseVersion: ${{ github.event.inputs.releaseVersion }},
                branchName: 'release/r-${{ github.event.inputs.releaseVersion }}'
              }
            });

            console.log(response.status);
==================

name: Deploy WAR to JBoss

on:
  repository_dispatch:
    types: [deploy-app]

jobs:
  deploy:
    runs-on: rakdeh8
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Run Ansible Playbook
        env:
          TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}
        run: |
          cd ${{ github.workspace }}
          ansible-playbook -b --extra-vars 'target=ANTANSAPPS02' ./playbook/dehrepdeployment.yml
