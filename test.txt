#!/bin/bash
backup_location="$1"  # Taking backup location as an argument

# Find the latest backup directory with date and time
latest_backup=$(ls -td "$backup_location"/backup-* | head -n 1)

if [ -z "$latest_backup" ]; then
    echo "No backup directories found."
    exit 1
fi

echo "Latest backup directory: $latest_backup"

# List the contents of the latest backup directory
ls -la "$latest_backup"

# Read the content of release.txt and remove any leading/trailing whitespace characters
release_content=$(sed 's/^[[:space:]]*//;s/[[:space:]]*$//' "$latest_backup/release.txt" 2>/dev/null)

# Print the content of release_content
echo "$release_content"

# Check if release_content is not empty
if [ -n "$release_content" ]; then
    # Iterate through each line in release.txt
    while IFS=, read -r app_name app_targeted_location; do
        # Check if both app_name and app_targeted_location are not empty
        if [ -n "$app_name" ] && [ -n "$app_targeted_location" ]; then
            # Log the targeted path
            echo "Targeted location for $app_name: $app_targeted_location"

            # Define paths for old deployment files and backup location
            old_deployment_path="$latest_backup/$app_name"

            # Copy files from backup to targeted location
            cp -r "$old_deployment_path" "$app_targeted_location"

            # Print information about the copy
            echo "Copy: $app_name - $old_deployment_path -> $app_targeted_location"
        fi
    done <<< "$release_content"
else
    echo "No content found in release.txt."
fi

ls -la "/ibm/IBM-CAS/WebSphere/targeted_location7"
