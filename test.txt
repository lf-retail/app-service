name: release-was-warfileinstall
run-name: release-was-warfileinstall-${{ github.event.inputs.release_version }}

permissions:
  id-token: write
  contents: write
  security-events: write
  actions: read
  pull-requests: write

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version to deploy'
        required: true 
        type: string
      war_file_path:
        description: 'Path to the WAR file on the target server'
        required: true
        type: string
        default: '/ibm/IBM/WebSphere/AppServer/profiles/AppSrv01/installedApps/antibpsapp1Cell01/KYC_Remediation.war'
      war_file_name:
        description: 'Name of the WAR file'
        required: true
        type: string
        default: 'KYC_Remediation.war'
      app_name:
        description: 'Name of the deployed application'
        required: true
        type: string
        default: 'KYC_Remediation_war'
      context_root:
        description: 'Context root of the deployed application'
        required: true
        type: string
        default: '/KYC_Remediation'
        
jobs:
  IBPS-warfileinstall:
    uses: rakbank-internal/enterprise-reusable-workflows/.github/workflows/was-warfileinstall.yml@feature/optimum-deh-mcf-templates
    with:
      release_version: ${{ github.event.inputs.release_version }}
      war_file_path: ${{ github.event.inputs.war_file_path }}
      war_file_name: ${{ github.event.inputs.war_file_name }}
      app_name: ${{ github.event.inputs.app_name }}
      context_root: ${{ github.event.inputs.context_root }}
    secrets:
      TOKEN_GITHUB: ${{ secrets.DEVOPS_WORKFLOW_TOKEN }}
      USERNAME_GITHUB: ${{ secrets.USERNAME_GITHUB }}

================================
- name: was deploy warfileinstall in was
  hosts: '{{ target }}'
  become: yes
  become_user: '{{ ansible_user }}'

  tasks:
    - name: Set dynamic WAS_HOST and WAS_PORT
      set_fact:
        was_host: "{{ hostvars[inventory_hostname]['ansible_ssh_host'] }}"
        was_port: "{{ hostvars[inventory_hostname]['ansible_host_port'] }}"

    - name: Include environment-specific variables
      include_vars: "{{ hostvars[inventory_hostname].ansible_host_vars_file }}"
        
    - name: Include was-warfile-deploy
      include_role:
        name:  was-warfile-deploy
        tasks_from: main.yml
      vars:
        github_token: "{{ lookup('env', 'TOKEN_GITHUB') }}"
        owner: "rakbank-internal"
        repo: "ibps-was-ansible-cd"
        branch: "IBPS-APP-ROLE"
        release_version: "{{ lookup('env', 'release_version') }}"
        Profile_home: "/ibm/IBM/Application/release"
        WAR_FILE_PATH:  "{{ lookup('env', 'war_file_path') }}"
        WAR_FILE_NAME:  "{{ lookup('env', 'war_file_name') }}"
        APP_NAME:  "{{ lookup('env', 'app_name') }}"
        CONTEXT_ROOT:  "{{ lookup('env', 'context_root') }}"
        WAS_HOST: "{{ was_host }}"
        WAS_PORT: "{{ was_port }}"
        WAS_ADMIN_USER: "{{ was_admin_user }}"
        WAS_ADMIN_PASSWORD: "{{ was_admin_password }}"
        CELL_NAME: "{{ cell_name }}"
        CLUSTER_NAME: "{{ cluster_name }}"
        WSADMIN: "/ibm/IBM/WebSphere/AppServer/profiles/AppSrv01/bin/wsadmin.sh"        
=========================
[all:vars]
ansible_user=itdevtra
ansible_ssh_port=22

[target_wasuat209]
ANTIBPSAPP1 ansible_ssh_host=10.15.11.209 ansible_host_port=8879 ansible_host_vars_file=vars/uat209.yml

#[target_wasuat210]
#ANTIBPSAPP2 ansible_ssh_host=10.15.11.210 ansible_host_port=8879 ansible_host_vars_file=vars/uat210.yml
=================

cell_name: "antibpsapp1Cell01"
cluster_name: "BPMCLUSTER"
ansible_user: "itdevtra"
was_admin_user: "deployer"
was_admin_password: "deployer@123"
================

name: was-warfileinstall-reusable-workflow

permissions:
  id-token: write
  contents: write
  security-events: write
  actions: read
  pull-requests: write

on:
  workflow_call:
    inputs:
      release_version:
        description: 'Release version to deploy'
        required: true 
        type: string
      war_file_path:
        description: 'Path to the WAR file on the target server'
        required: true
        type: string
      war_file_name:
        description: 'Name of the WAR file'
        required: true
        type: string
      app_name:
        description: 'Name of the deployed application'
        required: true
        type: string
      context_root:
        description: 'Context root of the deployed application'
        required: true
        type: string

    secrets:
      TOKEN_GITHUB: 
        required: true
      USERNAME_GITHUB:
        required: true

jobs:
  deploy:
    runs-on:
     group: rakbank-self-hosted-runner
     labels: dehitdevtra1

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Checkout roles repository
      uses: actions/checkout@v4
      with:
        repository: rakbank-internal/enterprise-ansible-roles
        token: ${{ secrets.TOKEN_GITHUB }}
        path: ansible-roles
        ref: Feature      
      
    - name: Checkout reusable code
      uses: actions/checkout@v4
      with:
        repository: rakbank-internal/enterprise-reusable-workflows
        ref: feature/optimum-deh-mcf-templates
        path: reusable-workflows
        token: ${{ secrets.TOKEN_GITHUB }}  

    - name: Make war-install-in-was.sh executable
      run: |
        chmod +x scripts/war-install-in-was.sh    

    - name: war file installation in WAS
      uses: ./reusable-workflows/.github/actions/was-warfileinstall
      with:
        release_version: ${{ inputs.release_version }}
        war_file_path: ${{ inputs.war_file_path }}
        war_file_name: ${{ inputs.war_file_name }}
        app_name: ${{ inputs.app_name }}
        context_root: ${{ inputs.context_root }}
        TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}
        USERNAME_GITHUB: ${{ secrets.USERNAME_GITHUB }}
=========================
name: 'was-warfileinstall'
description: 'was-warfileinstall'
inputs:
  release_version:
    description: 'Release version to deploy'
    required: true 
    type: string
  war_file_path:
    description: 'Path to the WAR file on the target server'
    required: true
    type: string
  war_file_name:
    description: 'Name of the WAR file'
    required: true
    type: string
  app_name:
    description: 'Name of the deployed application'
    required: true
    type: string
  context_root:
    description: 'Context root of the deployed application'
    required: true
    type: string
  TOKEN_GITHUB:
    description: 'GitHub token'
    required: true
    type: string
  USERNAME_GITHUB:
    description: 'GitHub username'
    required: true
    type: string    
  
runs:
  using: "composite"
  steps:
    - name: Run Ansible Playbook
      env:
        TOKEN_GITHUB: ${{ inputs.TOKEN_GITHUB }}
        release_version: ${{ inputs.release_version }}
        war_file_path: ${{ inputs.war_file_path }}
        war_file_name: ${{ inputs.war_file_name }}
        app_name: ${{ inputs.app_name }}
        context_root: ${{ inputs.context_root }}
        USERNAME_GITHUB: ${{ inputs.USERNAME_GITHUB }}
      run: |
        cd ${{ github.workspace }}
        ansible-playbook -vvv -b --extra-vars "target=target_wasuat209 destination=${{ github.workspace }} release_version=${release_version} war_file_path=${war_file_path} war_file_name=${war_file_name} app_name=${app_name} context_root=${context_root} TOKEN_GITHUB=${TOKEN_GITHUB}" ./playbook/was-warfileinstall.yml
      shell: bash   
