using release.yml

name: Release Pipeline
run-name: release - ${{github.event.inputs.releaseVersion}}

on:
  #pull_request:
   # branches: [ "main" ]

  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Release Version'
        required: true
        default: '1.0.0'
      choice:
        type: choice
        description: Select a service
        options:
          - Rakbank-DEH-Onboarding/RetailOnboarding-AccMS
      #Organization:
       # type: choice
        #description: Select an Organization
        #options:
         # - Rakbank-DEH-Onboarding
        #default: Rakbank-DEH-Onboarding
      app:
        type: boolean
        description: Deploy App
      database:
        type: boolean
        description: Deploy database
#env:
 # GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}

jobs:
  Create-App-CI:
    if: ${{ github.event.inputs.app =='true' }}
    environment: DEV
    name: APP-CI
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      issues: write
      repository-projects: write
      
    steps:
    - name: Get Token
      id: get-workflow-token
      uses: peter-murray/workflow-application-token-action@v2
      with:
        application_id: 403159
        application_private_key: ${{ secrets.DEVOPSTOKEN_DEH }}
    - name: Display selected inputs
      run: |
        echo "Selected Release Version: ${{ github.event.inputs.releaseVersion }}"
        echo "Selected Repository: ${{ github.event.inputs.choice }}"
        echo "Selected Organization: ${{ github.event.inputs.Organization }}"

    - name: Checkout selected repository
      uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.choice }}
        ref: 'dev'
        #ref: 'refs/heads/dev'
        #token: ${{ secrets.TOKEN_GITHUB }}
        token: ${{ steps.get-workflow-token.outputs.token }}

    - name : Create Application Release Branch 
      run: |
        RELEASE_BRANCH_NAME=release/r-${{ github.event.inputs.releaseVersion }}
        git checkout -b $RELEASE_BRANCH_NAME
        git push --set-upstream origin $RELEASE_BRANCH_NAME
      env:
        token: $GITHUB_TOKEN

    #- name: Create and push new branch
     # run: |
      #  git checkout -b rel.${{ github.event.inputs.releaseVersion }}
       # git push origin rel.${{ github.event.inputs.releaseVersion }}

    #- name: Checkout the new branch (rel.x.x.x)
     # uses: actions/checkout@v4
      #with:
       # repository: ${{ github.event.inputs.choice }}
        #ref: rel.${{ github.event.inputs.releaseVersion }}
        #token: ${{ steps.get-workflow-token.outputs.token }}

  App-CI:
    name: App-ci
    needs: Create-App-CI
    uses: Rakbank-DEH-Onboarding/RetailOnboarding-AccMS/.github/workflows/release-ci-test-new.yml@dev
    secrets: inherit
    with:
      #Organization: ${{ github.event.inputs.Organization }}
      repoName: ${{ github.event.inputs.choice }}
      branchName: $RELEASE_BRANCH_NAME      
      #releaseVersion: ${{ github.event.inputs.releaseVersion }}
    #secrets:
      #token: $GITHUB_TOKEN

using release-ci-test-new.yml
name: Gradle_Build

permissions:
  security-events: write

on:
  workflow_call:
    #secrets:
      #token:
        #required: true
    inputs:
      #releaseVersion:
       # required: true
        #type: string
      repoName:
        required: true
        type: string 
      branchName:
        type: string
        required: true
      #Organization:
       # required: true
        #type: string
env:
  REPOSITORY: ${{ inputs.repoName }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Get Token
      id: get-workflow-token
      uses: peter-murray/workflow-application-token-action@v2
      with:
        application_id: 403159
        application_private_key: ${{ secrets.DEVOPSTOKEN_DEH }}
        organization: ${{ env.ORGANIZATION }}

    - name: Check Out Code from Dispatched Repo
      uses: actions/checkout@v3
      with:
        repository: ${{ inputs.repoName }}
        ref: release/r-${{inputs.releaseVersion}}
        #token: ${{ secrets.TOKEN_GITHUB }}
        #token: ${{ secrets.GITHUB_TOKEN }}
        token: ${{ steps.get-workflow-token.outputs.token }}

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '8'

    - name: Grant execute permission for Gradle
      run: chmod +x gradle-4.10.1/bin/gradle

    - name: Build with bundled Gradle
      run: ./gradle-4.10.1/bin/gradle build -PbuildVersion=${{ github.event.inputs.version }}
      env:
        USERNAME_GITHUB: ${{ secrets.USERNAME_GITHUB }}
        TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}
    
    - name: List generated WAR files
      run: ls build/libs

    - name: Publish to GitHub Packages
      run: |
        ./gradle-4.10.1/bin/gradle publish -PbuildVersion=${{ github.event.inputs.version }}
      env:
        USERNAME_GITHUB: ${{ secrets.USERNAME_GITHUB }}
        TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}

getting error:
Run ./gradle-4.10.1/bin/gradle publish -PbuildVersion=
  ./gradle-4.10.1/bin/gradle publish -PbuildVersion=
  shell: /usr/bin/bash -e {0}
  env:
    REPOSITORY: Rakbank-DEH-Onboarding/RetailOnboarding-AccMS
    JAVA_HOME: /opt/hostedtoolcache/Java_Adopt_jdk/8.0.392-8/x64
    USERNAME_GITHUB: ***
    TOKEN_GITHUB: ***

> Configure project :
org.gradle.api.plugins.HelpTasksPlugin@2e3e6bbe
org.gradle.language.base.plugins.LifecycleBasePlugin@2976fc5d
org.gradle.api.plugins.BasePlugin@7bff11c8
org.gradle.api.plugins.ReportingBasePlugin@4e6cb4cb
org.gradle.api.plugins.JavaBasePlugin@5117c270
org.gradle.api.plugins.JavaPlugin@4f1d581b
org.gradle.api.plugins.WarPlugin@4cef7161
org.gradle.platform.base.plugins.ComponentBasePlugin@678e4edb
org.gradle.language.base.plugins.LanguageBasePlugin@8e50418
org.gradle.platform.base.plugins.BinaryBasePlugin@2d9d589f
org.gradle.api.plugins.JavaBasePluginRules@1a4e5034
org.gradle.api.publish.plugins.PublishingPlugin@fa33d30
org.gradle.api.publish.maven.plugins.MavenPublishPlugin@2f463d18
vr.plugin.ManifestClasspathPlugin@6858c1cf
classpath:: file collection
archiveName:: release-.war

> Task :generatePomFileForMavenJavaPublication
> Task :generateDAL NO-SOURCE
> Task :generateER NO-SOURCE
> Task :generateOpenAPI NO-SOURCE
> Task :generateService NO-SOURCE
> Task :generateVO NO-SOURCE
> Task :compileJava UP-TO-DATE
> Task :processResources UP-TO-DATE
> Task :classes UP-TO-DATE
> Task :jar UP-TO-DATE
> Task :publishMavenJavaPublicationToGitHubPackagesRepository FAILED


FAILURE: Build failed with an exception.
Deprecated Gradle features were used in this build, making it incompatible with Gradle 5.0.

* What went wrong:
Execution failed for task ':publishMavenJavaPublicationToGitHubPackagesRepository'.
> Failed to publish publication 'mavenJava' to repository 'GitHubPackages'
   > Invalid publication 'mavenJava': version cannot be empty.

* Try:
Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.

* Get more help at https://help.gradle.org

BUILD FAILED in 1s
Use '--warning-mode all' to show the individual deprecation warnings.
See https://docs.gradle.org/4.10.1/userguide/command_line_interface.html#sec:command_line_warnings
5 actionable tasks: 2 executed, 3 up-to-date
Error: Process completed with exit code 1.
