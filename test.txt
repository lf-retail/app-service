- name: Stop Target Server
  systemd:
    name: your_service_name  # Replace with the actual service name
    state: stopped
  become: yes
  become_user: "{{ ansible_user }}"
  tags:
    - stop_target_server

- name: Download zip from GitHub packages on Runner
  delegate_to: localhost
  run_once: true
  get_url:
    url: "{{ zip_file_url }}"
    dest: "/tmp/{{ zip_file_name }}"
    headers:
      Authorization: "token {{ github_token }}"
 
- name: Copy zip to Target Server
  copy:
    src: "/tmp/{{ zip_file_name }}"
    dest: "{{ Profile_home }}/{{ zip_file_name }}"
    mode: '0755'

- name: List contents of the directory after copying deploy.sh
  command: ls -al "{{ Profile_home }}"
  become: yes
  become_user: "{{ ansible_user }}"    
    
- name: Copy deploy.sh to Target Server
  copy:
    src: "/ansible/GITHUB_RUNNER/actions-runner10/_work/ibps-was-ansible-cd/ibps-was-ansible-cd/deploy.sh"
    dest: "{{ Profile_home }}/deploy.sh"
    mode: '0755'
  become: yes
  become_user: "{{ ansible_user }}"

- name: List contents of the directory after copying deploy.sh
  command: ls -al "{{ Profile_home }}"
  become: yes
  become_user: "{{ ansible_user }}"

- name: Run deploy on Target Server
  become: yes
  become_user: "{{ ansible_user }}"
  shell: "cd {{ Profile_home }} && ./deploy.sh {{ Profile_home }} {{ zip_file_url }} {{ zip_file_name }} {{ backup_location }}"
  register: deploy_result
  ignore_errors: yes

- name: List contents of the directory after copying deploy.sh
  command: ls -al "{{ targeted_location }}"
  become: yes
  become_user: "{{ ansible_user }}"
  register: ls_result
  
- name: Display ls -la result
  debug:
    var: ls_result.stdout_lines 

- name: Start Target Server
  systemd:
    name: your_service_name  # Replace with the actual service name
    state: started
  become: yes
  become_user: "{{ ansible_user }}"
  tags:
    - start_target_server
