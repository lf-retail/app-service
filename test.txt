#!/bin/bash

# Server details (adapt these variables to your environment)
WAS_HOST="10.15.11.209"
WAS_PORT="9043" # Change to your WAS administrative port, often 9043 for HTTPS
WAS_ADMIN_USER="deployer"
WAS_ADMIN_PASSWORD="deployer@123"

# WAR file and application details
WAR_FILE_PATH="/ibm/IBM/WebSphere/AppServer/profiles/AppSrv01/installedApps/antibpsapp1Cell01/KYC_Remediation.war"
APP_NAME="KYC_Remediation"
CONTEXT_ROOT="KYC_Remediation"

# Combine all shared libraries into a single string
SHARED_LIB=$(printf ",%s" "$@")
SHARED_LIB=${SHARED_LIB:1} # Remove the leading comma

# Path to wsadmin.sh (adjust for your WAS installation)
WSADMIN="/ibm/IBM/WebSphere/AppServer/profiles/AppSrv01/bin/wsadmin.sh"

# wsadmin script content
WSADMIN_SCRIPT="
# Connect to WebSphere Application Server
AdminConfig.connect('$WAS_ADMIN_USER', '$WAS_ADMIN_PASSWORD')

# Check if the application already exists
if AdminApp.list().find('$APP_NAME') != -1:
    print('Application $APP_NAME already exists. Skipping installation.')
else:
    # Install the application with Parent Last class loader policy
    AdminApp.install('$WAR_FILE_PATH', '[ -appname $APP_NAME -contextroot $CONTEXT_ROOT -MapModulesToServers [[ .* .* WebSphere:cell=YourCellName,node=YourNodeName,server=YourServerName ]] -MapWebModToVH [[ .* .* default_host ]] -classloaderMode PARENT_LAST ]')
    # Install the application
    #AdminApp.install('$WAR_FILE_PATH', '[ -appname $APP_NAME -contextroot $CONTEXT_ROOT -MapWebModToVH [[ .* .* default_host ]] ]')
    # Map shared libraries (Optional: Adjust or remove according to your requirements)
    AdminConfig.create('LibraryRef', AdminConfig.getid('/Deployment:$APP_NAME/'), '[[libraryName $SHARED_LIB]]')
    # Save configuration changes
    AdminConfig.save()

# Disconnect from the server
AdminConfig.disconnect()
"

# Check if shared libraries were provided
if [ -z "$SHARED_LIB" ]; then
    echo "No shared libraries provided. Deployment failed."
    exit 1
fi

# Execute the script with wsadmin
echo "Deploying $APP_NAME from WAR file: $WAR_FILE_PATH"
echo "$WSADMIN_SCRIPT" | $WSADMIN -lang jython -conntype SOAP -host $WAS_HOST -port $WAS_PORT -user $WAS_ADMIN_USER -password $WAS_ADMIN_PASSWORD

if [ $? -eq 0 ]; then
    echo "Deployment of $APP_NAME completed successfully."
else
    echo "Deployment failed. Check the output for errors."
    exit 1
fi
===================

#!/bin/bash

# Server details

WAS_HOST="10.15.11.209"

WAS_PORT="9043"

WAS_ADMIN_USER="deployer"

WAS_ADMIN_PASSWORD="deployer@123"

# WAR file and application details

WAR_FILE_PATH="/ibm/IBM/WebSphere/AppServer/profiles/AppSrv01/installedApps/antibpsapp1Cell01/KYC_Remediation.war"

APP_NAME="KYC_Remediation"

CONTEXT_ROOT="KYC_Remediation"

# Combine shared libraries into a single string

SHARED_LIB="ibps_library,omnidocs_library,wfs_library,od_library"

# Path to wsadmin.sh

WSADMIN="/ibm/IBM/WebSphere/AppServer/profiles/AppSrv01/bin/wsadmin.sh"

# wsadmin script content

WSADMIN_SCRIPT="

# Check if the application already exists

if '$APP_NAME' in AdminApp.list().splitlines():

    print('Application $APP_NAME already exists. Skipping installation.')

else:

    # Install the application

    AdminApp.install('$WAR_FILE_PATH', '-appname $APP_NAME -contextroot $CONTEXT_ROOT -MapWebModToVH [[ .* .* default_host ]]')

    # Map shared libraries

    AdminConfig.create('LibraryRef', AdminConfig.getid('/Deployment:$APP_NAME/'), '[[libraryName $SHARED_LIB]]')

    # Save configuration changes

    AdminConfig.save()

"

# Execute the script with wsadmin

echo "Deploying $APP_NAME from WAR file: $WAR_FILE_PATH"

echo "$WSADMIN_SCRIPT" | $WSADMIN -lang jython -conntype SOAP -host $WAS_HOST -port $WAS_PORT -user $WAS_ADMIN_USER -password $WAS_ADMIN_PASSWORD

# Check deployment status

if [ $? -eq 0 ]; then

    echo "Deployment of $APP_NAME completed successfully."

else

    echo "Deployment failed. Check the output for errors."

    exit 1

fi

==============

I wanted to confirm that the deployment of the IBPS lose file on the UAT cluster servers, 10.15.11.209 and 10.15.11.210, has been completed successfully.

Currently, we're in the process of implementing another script for the installation of the WAR file on the WAS console. However, we've encountered some issues along the way.

Could you please confirm the port number for the WAS server?

WAS_HOST="10.15.11.209"
WAS_PORT="9043" 


===============

Dear Shanmuganathan,

As per the below error script is try to find below SOAP port.

SOAP_CONNECTOR_ADDRESS=8879

Also below highlighted part below application (KYC_Remediation) is already installed in server. 

Deploying KYC_Remediation from WAR file: /ibm/IBM/WebSphere/AppServer/profiles/AppSrv01/installedApps/antibpsapp1Cell01/KYC_Remediation.war
WASX7023E: Error creating "SOAP" connection to host "10.15.11.209"; exception information: com.ibm.websphere.management.exception.ConnectorNotAvailableException: [SOAPException: faultCode=SOAP-ENV:Protocol; msg=Unsupported response content type &quot;text/html&quot;, must be: &quot;text/xml&quot;. Response was:
&lt;H1&gt;SRVE0255E: A WebGroup/Virtual Host to handle / has not been defined.&lt;/H1&gt;&lt;BR&gt;&lt;H3&gt;SRVE0255E: A WebGroup/Virtual Host to handle 10.15.11.209:9043 has not been defined.&lt;/H3&gt;&lt;BR&gt;
]
WASX7213I: This scripting client is not connected to a server process; please refer to the log file /ibm/IBM/WebSphere/AppServer/profiles/AppSrv01/logs/wsadmin.traceout for additional information.
WASX8011W: AdminTask object is not available.
WASX7031I: For help, enter: "print Help.help()"
wsadmin>wsadmin>wsadmin>wsadmin>wsadmin>wsadmin>Traceback (innermost last):
  (no code object) at line 0
  File "<input>", line 2
SyntaxError: invalid syntax
wsadmin>Application KYC_Remediation already exists. Skipping installation.
wsadmin>wsadmin>Traceback (innermost last):
  (no code object) at line 0
  File "<input>", line 1
        else:
        ^
SyntaxError: invalid syntax
wsadmin>wsadmin>wsadmin>wsadmin>WASX7015E: Exception running command: "    AdminApp.install('/ibm/IBM/WebSphere/AppServer/profiles/AppSrv01/installedApps/antibpsapp1Cell01/KYC_Remediation.war', '-appname KYC_Remediation -contextroot KYC_Remediation -MapWebModToVH [[ .* .* default_host ]]')"; exception information:
com.ibm.ws.scripting.ScriptingException: WASX7206W: The application management service is not running. Application management commands will not run.
 
wsadmin>wsadmin>wsadmin>wsadmin>WASX7015E: Exception running command: "    AdminConfig.create('LibraryRef', AdminConfig.getid('/Deployment:KYC_Remediation/'), '[[libraryName ibps_library,omnidocs_library,wfs_library,od_library]]')"; exception information:
com.ibm.ws.scripting.ScriptingException: WASX7070E: The configuration service is not available.
 
wsadmin>wsadmin>wsadmin>wsadmin>WASX7015E: Exception running command: "    AdminConfig.save()"; exception information:
com.ibm.ws.scripting.ScriptingException: WASX7070E: The configuration service is not available.
 
wsadmin>wsadmin>wsadmin>Deployment failed. Check the output for errors.


I wanted to inform you that the deployment of the IBPS loose files on the UAT cluster servers, 10.15.11.209 and 10.15.11.210, has been successfully completed.
Currently, we are in the process of implementing another script for the installation of the WAR file on the WAS console. Unfortunately, we've encountered some issues along the way.
During our discussion with Anisur Rahman from the IBPS team, he suggested changing the SOAP port and implementing the script in case the WAR application is already installed.
I'm actively working on this and will provide you with an update once it's done.
=====================

#!/bin/bash

# Server details

WAS_HOST="10.15.11.209"

WAS_PORT="8879"

WAS_ADMIN_USER="deployer"

WAS_ADMIN_PASSWORD="deployer@123"

# WAR file and application details

WAR_FILE_PATH="/ibm/IBM/WebSphere/AppServer/profiles/AppSrv01/installedApps/antibpsapp1Cell01/KYC_Remediation.war"

APP_NAME="KYC_Remediation"

CONTEXT_ROOT="KYC_Remediation"

# Combine shared libraries into a single string

SHARED_LIB="ibps_library,omnidocs_library,wfs_library,od_library"

# Path to wsadmin.sh

WSADMIN="/ibm/IBM/WebSphere/AppServer/profiles/AppSrv01/bin/wsadmin.sh"

# wsadmin script content

WSADMIN_SCRIPT="

# Check if the application already exists

if '$APP_NAME' in AdminApp.list().splitlines():

    print('Application $APP_NAME already exists. Skipping installation.')

else:

    # Install the application
	
	 AdminApp.help()

    # AdminApp.install('$WAR_FILE_PATH', '-appname $APP_NAME -contextroot $CONTEXT_ROOT -MapWebModToVH [[ .* .* default_host ]]')

    # Map shared libraries

    # AdminConfig.create('LibraryRef', AdminConfig.getid('/Deployment:$APP_NAME/'), '[[libraryName $SHARED_LIB]]')

    # Save configuration changes

    # AdminConfig.save()

"

# Execute the script with wsadmin

echo "Deploying $APP_NAME from WAR file: $WAR_FILE_PATH"

echo "$WSADMIN_SCRIPT" | $WSADMIN -lang jython -conntype SOAP -host $WAS_HOST -port $WAS_PORT -user $WAS_ADMIN_USER -password $WAS_ADMIN_PASSWORD

# Check deployment status

if [ $? -eq 0 ]; then

    echo "Deployment of $APP_NAME completed successfully."

else

    echo "Deployment failed. Check the output for errors."

    exit 1

fi
=================

#!/bin/bash
# Server details
WAS_HOST="10.15.11.209"
WAS_PORT="8879"
WAS_ADMIN_USER="deployer"
WAS_ADMIN_PASSWORD="deployer@123"

# WAR file and application details
WAR_FILE_PATH="/ibm/IBM/WebSphere/AppServer/profiles/AppSrv01/installedApps/antibpsapp1Cell01/KYC_Remediation.war"
APP_NAME="KYC_Remediation"
CONTEXT_ROOT="KYC_Remediation"

# Combine shared libraries into a single string
SHARED_LIB="ibps_library,omnidocs_library,wfs_library,od_library"

# Path to wsadmin.sh
WSADMIN="/ibm/IBM/WebSphere/AppServer/profiles/AppSrv01/bin/wsadmin.sh"

# wsadmin script content
WSADMIN_SCRIPT="

# Check if the application already exists
if '$APP_NAME' in AdminApp.list().splitlines():
    #print('Application $APP_NAME already exists. Skipping installation.')
    AdminApp.help()
else:
    # Install the application
	 AdminApp.help()
    # AdminApp.install('$WAR_FILE_PATH', '-appname $APP_NAME -contextroot $CONTEXT_ROOT -MapWebModToVH [[ .* .* default_host ]]')
    # Map shared libraries
    # AdminConfig.create('LibraryRef', AdminConfig.getid('/Deployment:$APP_NAME/'), '[[libraryName $SHARED_LIB]]')
    # Save configuration changes
    # AdminConfig.save()
"

# Execute the script with wsadmin
echo "Deploying $APP_NAME from WAR file: $WAR_FILE_PATH"
echo "$WSADMIN_SCRIPT" | $WSADMIN -lang jython -conntype SOAP -host $WAS_HOST -port $WAS_PORT -user $WAS_ADMIN_USER -password $WAS_ADMIN_PASSWORD

# Check deployment status
if [ $? -eq 0 ]; then
    echo "Deployment of $APP_NAME completed successfully."
else
    echo "Deployment failed. Check the output for errors."
    exit 1
fi
