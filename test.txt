#!/bin/bash

# Set SSH user and target server
ansible_user="itdevtra"
targeted_server="ANT3CASAPPS01"

# Debug Working Directory
run: |
    pwd
    ls -al

# Download and extract release.zip from GitHub Packages
curl -H "Authorization: Bearer $TOKEN_GITHUB" -o "release.zip" -L -H "Accept: application/vnd.github.v3+json" "https://maven.pkg.github.com/rakbank-internal/IBPS-Deployment/Rak/IBPS/release/2.0.0/release-2.0.0.zip"
unzip release.zip -d release

# Function to process each line in release.txt
process_line() {
    local filename
    local destination

    # Split the line into filename and destination using a comma as the delimiter 
    IFS=',' read -r filename destination <<< "$1"

    # Perform actions based on the values
    echo "Deploying $filename to $destination"

    # Check if either the filename or destination is empty
    if [ -z "$filename" ] || [ -z "$destination" ]; then
        echo "Error: Empty filename or destination in line: $1"
        return
    fi

    # Backup the existing file at the destination on the targeted server
    ssh "$ansible_user@$targeted_server" "mkdir -p $(dirname "$destination")"
    backup_dir="/ibm/IBM-CAS/BACKUP_RELEASE"
    backup_file="$backup_dir/$(basename "$destination")_backup_$(date +'%Y%m%d%H%M%S')"
    ssh "$ansible_user@$targeted_server" "cp \"$destination\" \"$backup_file\""
    echo "Backed up $destination to $backup_file on the targeted server"

    # Copy the file to the targeted server
    scp "release/$filename" "$ansible_user@$targeted_server:\"$destination\""

    if [ $? -eq 0 ]; then
        echo "Copied $filename to targeted server at $destination"
        
        # Log the deployment information to change.log
        echo "Deployed $filename to $destination on $(date +'%Y-%m-%d %H:%M:%S')" >> release/change.log
    else
        echo "Error copying $filename to targeted server"
    fi
}

# Check if the release.txt file exists
if [ -e "release/release/release.txt" ]; then
    # Create change.log file if not exists
    touch "release/change.log"
    
    # Read each line from the release.txt file
    while IFS= read -r line; do
        # Skip empty lines and lines starting with #
        if [[ -n "$line" && "$line" != "#"* ]]; then
            process_line "$line"
        fi
    done < "release/release/release.txt"
else
    echo "release.txt file not found"
fi
